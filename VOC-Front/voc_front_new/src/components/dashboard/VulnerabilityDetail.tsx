import React from 'react';
import { Vulnerability } from '../../types';
import { formatDate } from '../../utils/helpers';
import SeverityBadge from '../ui/SeverityBadge';
import StatusBadge from '../ui/StatusBadge';
import { AlertTriangle, Clock, Calendar, Link, Server, Tag } from 'lucide-react';

interface VulnerabilityDetailProps {
  vulnerability: Vulnerability;
  onClose: () => void;
}

const VulnerabilityDetail: React.FC<VulnerabilityDetailProps> = ({
  vulnerability,
  onClose,
}) => {
  return (
    <div className="fixed inset-0 bg-black/40 dark:bg-black/60 flex items-center justify-center z-50 p-4">
      <div className="bg-white dark:bg-dark-200 rounded-lg shadow-xl w-full max-w-3xl max-h-[90vh] overflow-auto animate-fade-in">
        <div className="px-6 py-4 border-b border-gray-200 dark:border-dark-300 flex justify-between items-center sticky top-0 bg-white dark:bg-dark-200 z-10">
          <h2 className="text-xl font-semibold">{vulnerability.cve_id}</h2>
          <button
            onClick={onClose}
            className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>

        <div className="p-6">
          <div className="mb-6">
            <h3 className="text-lg font-semibold mb-2">{vulnerability.title}</h3>
            <div className="flex flex-wrap gap-2 mb-4">
              <SeverityBadge severity={vulnerability.severity} />
              <StatusBadge status={vulnerability.status} />
              {vulnerability.is_kev && (
                <span className="badge bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300">
                  KEV
                </span>
              )}
            </div>
            <p className="text-gray-700 dark:text-gray-300 mb-4">
              {vulnerability.description}
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
            <div>
              <h4 className="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Informations</h4>
              <ul className="space-y-2">
                <li className="flex items-center">
                  <AlertTriangle className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                  <span className="text-sm text-gray-700 dark:text-gray-300">CVSS Score: <strong>{vulnerability.cvss_score.toFixed(1)}</strong></span>
                </li>
                {vulnerability.epss_score !== undefined && (
                  <li className="flex items-center">
                    <AlertTriangle className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                    <span className="text-sm text-gray-700 dark:text-gray-300">EPSS Score: <strong>{(vulnerability.epss_score * 100).toFixed(2)}%</strong></span>
                  </li>
                )}
                <li className="flex items-center">
                  <Calendar className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                  <span className="text-sm text-gray-700 dark:text-gray-300">Publié le: <strong>{formatDate(vulnerability.published_date)}</strong></span>
                </li>
                <li className="flex items-center">
                  <Server className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                  <span className="text-sm text-gray-700 dark:text-gray-300">Systèmes affectés: <strong>{vulnerability.affected_systems}</strong></span>
                </li>
              </ul>
            </div>

            <div>
              <h4 className="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Produit</h4>
              <ul className="space-y-2">
                <li className="flex items-center">
                  <Tag className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                  <span className="text-sm text-gray-700 dark:text-gray-300">Vendor: <strong>{vulnerability.vendor}</strong></span>
                </li>
                <li className="flex items-center">
                  <Tag className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                  <span className="text-sm text-gray-700 dark:text-gray-300">Product: <strong>{vulnerability.product}</strong></span>
                </li>
                {vulnerability.taranis_link && (
                  <li className="flex items-center">
                    <Link className="h-4 w-4 mr-2 text-gray-500 dark:text-gray-400" />
                    <a 
                      href={vulnerability.taranis_link}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-sm text-primary-600 hover:text-primary-800 dark:text-primary-400 dark:hover:text-primary-300"
                    >
                      Lien Taranis
                    </a>
                  </li>
                )}
              </ul>
            </div>
          </div>

          <div className="border-t border-gray-200 dark:border-dark-300 pt-4 flex justify-end">
            <button
              onClick={onClose}
              className="btn-secondary"
            >
              Fermer
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityDetail;